package renderer

import (
	parser "github.com/horriblename/latex-parser/latex"
)

var VanillaToUnicode = map[parser.LatexCmd]string{
	// escaped symbols
	parser.CMD_SPACE: ` `,
	// vanilla symbols
	parser.CMD_alpha: `α`,
	parser.CMD_beta:  `β`,
	parser.CMD_gamma: `γ`,
	parser.CMD_delta: `δ`,
	parser.CMD_zeta:  `ζ`,
	parser.CMD_eta:   `η`,
	parser.CMD_theta: `θ`,
	parser.CMD_iota:  `ι`,
	parser.CMD_kappa: `κ`,
	parser.CMD_mu:    `μ`,
	parser.CMD_nu:    `ν`,
	parser.CMD_xi:    `ξ`,
	parser.CMD_rho:   `ρ`,
	parser.CMD_sigma: `σ`,
	parser.CMD_tau:   `τ`,
	parser.CMD_chi:   `χ`,
	parser.CMD_psi:   `ψ`,

	parser.CMD_phi:    `ϕ`,
	parser.CMD_phiv:   `φ`,
	parser.CMD_varphi: `φ`,

	parser.CMD_epsilon:    `ϵ`,
	parser.CMD_epsiv:      `ε`,
	parser.CMD_varepsilon: `ε`,

	parser.CMD_piv:   `ϖ`,
	parser.CMD_varpi: `ϖ`,

	parser.CMD_sigmaf:   `ς`,
	parser.CMD_sigmav:   `ς`,
	parser.CMD_varsigma: `ς`,

	parser.CMD_thetav:   `ϑ`,
	parser.CMD_vartheta: `ϑ`,
	parser.CMD_thetasym: `ϑ`,

	parser.CMD_upsilon: `υ`,
	parser.CMD_upsi:    `υ`,

	parser.CMD_gammad:  `ϝ`,
	parser.CMD_Gammad:  `ϝ`,
	parser.CMD_digamma: `ϝ`,

	parser.CMD_kappav:   `ϰ`,
	parser.CMD_varkappa: `ϰ`,

	parser.CMD_rhov:   `ϱ`,
	parser.CMD_varrho: `ϱ`,

	parser.CMD_pi:     `π`,
	parser.CMD_lambda: `λ`,

	parser.CMD_Upsilon: `ϒ`,
	parser.CMD_Upsi:    `ϒ`,
	parser.CMD_upsih:   `ϒ`,
	parser.CMD_Upsih:   `ϒ`,

	parser.CMD_Gamma:  `Γ`,
	parser.CMD_Delta:  `Δ`,
	parser.CMD_Theta:  `Θ`,
	parser.CMD_Lambda: `Λ`,
	parser.CMD_Xi:     `Ξ`,
	parser.CMD_Pi:     `Π`,
	parser.CMD_Sigma:  `Σ`,
	parser.CMD_Phi:    `Φ`,
	parser.CMD_Psi:    `Ψ`,
	parser.CMD_Omega:  `Ω`,

	parser.CMD_cdot:     `·`,
	parser.CMD_sim:      `∼`,
	parser.CMD_cong:     `≅`,
	parser.CMD_equiv:    `≡`,
	parser.CMD_oplus:    `⊕`,
	parser.CMD_otimes:   `⊗`,
	parser.CMD_times:    `×`,
	parser.CMD_div:      `÷`,
	parser.CMD_ne:       `≠`,
	parser.CMD_pm:       `±`, // added temporarily, reorder later?
	parser.CMD_mp:       `∓`, // added temporarily, reorder later?
	parser.CMD_ast:      `∗`,
	parser.CMD_therefor: `∴`,
	parser.CMD_cuz:      `∵`,

	parser.CMD_prop:  `∝`,
	parser.CMD_asymp: `≈`,

	parser.CMD_lt:    `<`,
	parser.CMD_gt:    `>`,
	parser.CMD_le:    `≤`,
	parser.CMD_ge:    `≥`,
	parser.CMD_isin:  `∈`,
	parser.CMD_notin: `∉`,
	parser.CMD_ni:    `∋`,
	parser.CMD_notni: `∌`,

	parser.CMD_sub:  `⊂`,
	parser.CMD_sup:  `⊃`,
	parser.CMD_nsub: `⊄`,
	parser.CMD_nsup: `⊅`,

	parser.CMD_sube: `⊆`,
	parser.CMD_supe: `⊇`,

	parser.CMD_nsube: `⊈`,
	parser.CMD_nsupe: `⊉`,

	parser.CMD_sum:    `∑`,
	parser.CMD_prod:   `∏`,
	parser.CMD_coprod: `∐`,
	parser.CMD_int:    `∫`,

	parser.CMD_N: `ℕ`,
	parser.CMD_P: `ℙ`,
	parser.CMD_Z: `ℤ`,
	parser.CMD_Q: `ℚ`,
	parser.CMD_R: `ℝ`,
	parser.CMD_C: `ℂ`,
	parser.CMD_H: `ℍ`,

	parser.CMD_quad:  `    `,
	parser.CMD_emsp:  `    `,
	parser.CMD_qquad: `        `,

	parser.CMD_diamond:         `◇`,
	parser.CMD_bigtriangleup:   `△`,
	parser.CMD_ominus:          `⊖`,
	parser.CMD_uplus:           `⊎`,
	parser.CMD_bigtriangledown: `▽`,
	parser.CMD_sqcap:           `⊓`,
	parser.CMD_triangleleft:    `⊲`,
	parser.CMD_sqcup:           `⊔`,
	parser.CMD_triangleright:   `⊳`,
	parser.CMD_odot:            `⊙`,
	parser.CMD_bigcirc:         `◯`,
	parser.CMD_dagger:          `†`,
	parser.CMD_ddagger:         `‡`,
	parser.CMD_wr:              `≀`,
	parser.CMD_amalg:           `∐`,

	parser.CMD_models:     `⊨`,
	parser.CMD_prec:       `≺`,
	parser.CMD_succ:       `≻`,
	parser.CMD_preceq:     `≼`,
	parser.CMD_succeq:     `≽`,
	parser.CMD_simeq:      `≃`,
	parser.CMD_mid:        `∣`,
	parser.CMD_ll:         `≪`,
	parser.CMD_gg:         `≫`,
	parser.CMD_parallel:   `∥`,
	parser.CMD_bowtie:     `⋈`,
	parser.CMD_sqsubset:   `⊏`,
	parser.CMD_sqsupset:   `⊐`,
	parser.CMD_smile:      `⌣`,
	parser.CMD_sqsubseteq: `⊑`,
	parser.CMD_sqsupseteq: `⊒`,
	parser.CMD_doteq:      `≐`,
	parser.CMD_frown:      `⌢`,
	parser.CMD_vdash:      `⊦`,
	parser.CMD_dashv:      `⊣`,

	parser.CMD_longleftarrow:      `←`,
	parser.CMD_longrightarrow:     `→`,
	parser.CMD_Longleftarrow:      `⇐`,
	parser.CMD_Longrightarrow:     `⇒`,
	parser.CMD_longleftrightarrow: `↔`,
	parser.CMD_updownarrow:        `↕`,
	parser.CMD_Longleftrightarrow: `⇔`,
	parser.CMD_Updownarrow:        `⇕`,
	parser.CMD_mapsto:             `↦`,
	parser.CMD_nearrow:            `↗`,
	parser.CMD_hookleftarrow:      `↩`,
	parser.CMD_hookrightarrow:     `↪`,
	parser.CMD_searrow:            `↘`,
	parser.CMD_leftharpoonup:      `↼`,
	parser.CMD_rightharpoonup:     `⇀`,
	parser.CMD_swarrow:            `↙`,
	parser.CMD_leftharpoondown:    `↽`,
	parser.CMD_rightharpoondown:   `⇁`,
	parser.CMD_nwarrow:            `↖`,

	parser.CMD_ldots:       `…`,
	parser.CMD_cdots:       `⋯`,
	parser.CMD_vdots:       `⋮`,
	parser.CMD_ddots:       `⋰`,
	parser.CMD_surd:        `√`,
	parser.CMD_triangle:    `▵`,
	parser.CMD_ell:         `ℓ`,
	parser.CMD_top:         `⊤`,
	parser.CMD_flat:        `♭`,
	parser.CMD_natural:     `♮`,
	parser.CMD_sharp:       `♯`,
	parser.CMD_wp:          `℘`,
	parser.CMD_bot:         `⊥`,
	parser.CMD_clubsuit:    `♣`,
	parser.CMD_diamondsuit: `♢`,
	parser.CMD_heartsuit:   `♡`,
	parser.CMD_spadesuit:   `♠`,

	parser.CMD_oint:      `∮`,
	parser.CMD_bigcap:    `∩`,
	parser.CMD_bigcup:    `∪`,
	parser.CMD_bigsqcup:  `⊔`,
	parser.CMD_bigvee:    `∨`,
	parser.CMD_bigwedge:  `∧`,
	parser.CMD_bigodot:   `⊙`,
	parser.CMD_bigotimes: `⊗`,
	parser.CMD_bigoplus:  `⊕`,
	parser.CMD_biguplus:  `⊎`,

	parser.CMD_lfloor:          `⌊`,
	parser.CMD_rfloor:          `⌋`,
	parser.CMD_lceil:           `⌈`,
	parser.CMD_rceil:           `⌉`,
	parser.CMD_slash:           `/`,
	parser.CMD_opencurlybrace:  `{`,
	parser.CMD_closecurlybrace: `}`,

	parser.CMD_caret:      `^`,
	parser.CMD_underscore: `_`,
	parser.CMD_backslash:  `\`,
	parser.CMD_vert:       `|`,
	parser.CMD_perp:       `⊥`,
	parser.CMD_nabla:      `∇`,
	parser.CMD_hbar:       `ℏ`,
	parser.CMD_AA:         `Å`,
	parser.CMD_ring:       `∘`,
	parser.CMD_bull:       `•`,
	parser.CMD_setminus:   `∖`,
	parser.CMD_not:        `¬`,
	parser.CMD_dots:       `…`,

	parser.CMD_converges: `↓`,
	parser.CMD_dArr:      `⇓`,
	parser.CMD_diverges:  `↑`,
	parser.CMD_uArr:      `⇑`,
	parser.CMD_to:        `→`,
	parser.CMD_implies:   `⇒`,
	parser.CMD_gets:      `←`,
	parser.CMD_impliedby: `⇐`,
	parser.CMD_harr:      `↔`,
	parser.CMD_iff:       `⇔`,

	parser.CMD_Re:   `ℜ`,
	parser.CMD_Im:   `ℑ`,
	parser.CMD_part: `∂`,

	parser.CMD_inf:  `∞`,
	parser.CMD_alef: `ℵ`,

	parser.CMD_forall: `∀`,
	parser.CMD_xist:   `∃`,
	parser.CMD_and:    `∧`,
	parser.CMD_or:     `∨`,

	parser.CMD_o:   `∅`,
	parser.CMD_cup: `∪`,
	parser.CMD_cap: `∩`,

	parser.CMD_deg: `°`,
	parser.CMD_ang: `∠`,

	parser.CMD_ln:   `ln`,
	parser.CMD_lg:   `lg`,
	parser.CMD_log:  `log`,
	parser.CMD_span: `span`,
	parser.CMD_proj: `proj`,
	parser.CMD_det:  `det`,
	parser.CMD_dim:  `dim`,
	parser.CMD_min:  `min`,
	parser.CMD_max:  `max`,
	parser.CMD_mod:  `mod`,
	parser.CMD_lcm:  `lcm`,
	parser.CMD_gcd:  `gcd`,
	parser.CMD_gcf:  `gcf`,
	parser.CMD_hcf:  `hcf`,
	parser.CMD_lim:  `lim`,

	parser.CMD_sin:   `sin`,
	parser.CMD_cos:   `cos`,
	parser.CMD_tan:   `tan`,
	parser.CMD_sec:   `sec`,
	parser.CMD_cosec: `cosec`,
	parser.CMD_csc:   `csc`,
	parser.CMD_cotan: `cotan`,
	parser.CMD_cot:   `cot`,

	parser.CMD_sinh:   `sinh`,
	parser.CMD_cosh:   `cosh`,
	parser.CMD_tanh:   `tanh`,
	parser.CMD_sech:   `sech`,
	parser.CMD_cosech: `cosech`,
	parser.CMD_csch:   `csch`,
	parser.CMD_cotanh: `cotanh`,
	parser.CMD_coth:   `coth`,

	parser.CMD_asin:   `asin`,
	parser.CMD_acos:   `acos`,
	parser.CMD_atan:   `atan`,
	parser.CMD_asec:   `asec`,
	parser.CMD_acosec: `acosec`,
	parser.CMD_acsc:   `acsc`,
	parser.CMD_acotan: `acotan`,
	parser.CMD_acot:   `acot`,

	parser.CMD_asinh:   `asinh`,
	parser.CMD_acosh:   `acosh`,
	parser.CMD_atanh:   `atanh`,
	parser.CMD_asech:   `asech`,
	parser.CMD_acosech: `acosech`,
	parser.CMD_acsch:   `acsch`,
	parser.CMD_acotanh: `acotanh`,
	parser.CMD_acoth:   `acoth`,

	parser.CMD_arcsin:   `arcsin`,
	parser.CMD_arccos:   `arccos`,
	parser.CMD_arctan:   `arctan`,
	parser.CMD_arcsec:   `arcsec`,
	parser.CMD_arccosec: `arccosec`,
	parser.CMD_arccsc:   `arccsc`,
	parser.CMD_arccotan: `arccotan`,
	parser.CMD_arccot:   `arccot`,

	parser.CMD_arcsinh:   `arcsinh`,
	parser.CMD_arccosh:   `arccosh`,
	parser.CMD_arctanh:   `arctanh`,
	parser.CMD_arcsech:   `arcsech`,
	parser.CMD_arccosech: `arccosech`,
	parser.CMD_arccsch:   `arccsch`,
	parser.CMD_arccotanh: `arccotanh`,
	parser.CMD_arccoth:   `arccoth`,
	// extended symbols by pie framework
	parser.CMD_complement:       `∁`,
	parser.CMD_nexists:          `∄`,
	parser.CMD_sphericalangle:   `∢`,
	parser.CMD_iint:             `∬`,
	parser.CMD_iiint:            `∭`,
	parser.CMD_oiint:            `∯`,
	parser.CMD_oiiint:           `∰`,
	parser.CMD_backsim:          `∽`,
	parser.CMD_backsimeq:        `⋍`,
	parser.CMD_eqsim:            `≂`,
	parser.CMD_ncong:            `≇`,
	parser.CMD_approxeq:         `≊`,
	parser.CMD_bumpeq:           `≏`,
	parser.CMD_Bumpeq:           `≎`,
	parser.CMD_doteqdot:         `≑`,
	parser.CMD_fallingdotseq:    `≒`,
	parser.CMD_risingdotseq:     `≓`,
	parser.CMD_eqcirc:           `≖`,
	parser.CMD_circeq:           `≗`,
	parser.CMD_triangleq:        `≜`,
	parser.CMD_leqq:             `≦`,
	parser.CMD_geqq:             `≧`,
	parser.CMD_lneqq:            `≨`,
	parser.CMD_gneqq:            `≩`,
	parser.CMD_between:          `≬`,
	parser.CMD_nleq:             `≰`,
	parser.CMD_ngeq:             `≱`,
	parser.CMD_lesssim:          `≲`,
	parser.CMD_gtrsim:           `≳`,
	parser.CMD_lessgtr:          `≶`,
	parser.CMD_gtrless:          `≷`,
	parser.CMD_preccurlyeq:      `≼`,
	parser.CMD_succcurlyeq:      `≽`,
	parser.CMD_precsim:          `≾`,
	parser.CMD_succsim:          `≿`,
	parser.CMD_nprec:            `⊀`,
	parser.CMD_nsucc:            `⊁`,
	parser.CMD_subsetneq:        `⊊`,
	parser.CMD_supsetneq:        `⊋`,
	parser.CMD_vDash:            `⊨`,
	parser.CMD_Vdash:            `⊩`,
	parser.CMD_Vvdash:           `⊪`,
	parser.CMD_VDash:            `⊫`,
	parser.CMD_nvdash:           `⊬`,
	parser.CMD_nvDash:           `⊭`,
	parser.CMD_nVdash:           `⊮`,
	parser.CMD_nVDash:           `⊯`,
	parser.CMD_vartriangleleft:  `⊲`,
	parser.CMD_vartriangleright: `⊳`,
	parser.CMD_trianglelefteq:   `⊴`,
	parser.CMD_trianglerighteq:  `⊵`,
	parser.CMD_multimap:         `⊸`,
	parser.CMD_Subset:           `⋐`,
	parser.CMD_Supset:           `⋑`,
	parser.CMD_Cap:              `⋒`,
	parser.CMD_Cup:              `⋓`,
	parser.CMD_pitchfork:        `⋔`,
	parser.CMD_lessdot:          `⋖`,
	parser.CMD_gtrdot:           `⋗`,
	parser.CMD_lll:              `⋘`,
	parser.CMD_ggg:              `⋙`,
	parser.CMD_lesseqgtr:        `⋚`,
	parser.CMD_gtreqless:        `⋛`,
	parser.CMD_curlyeqprec:      `⋞`,
	parser.CMD_curlyeqsucc:      `⋟`,
	parser.CMD_nsim:             `≁`,
	parser.CMD_lnsim:            `⋦`,
	parser.CMD_gnsim:            `⋧`,
	parser.CMD_precnsim:         `⋨`,
	parser.CMD_succnsim:         `⋩`,
	parser.CMD_ntriangleleft:    `⋪`,
	parser.CMD_ntriangleright:   `⋫`,
	parser.CMD_ntrianglelefteq:  `⋬`,
	parser.CMD_ntrianglerighteq: `⋭`,
	parser.CMD_blacksquare:      `∎`,
	parser.CMD_colon:            `∶`,
	parser.CMD_llcorner:         `∟`,
	parser.CMD_dotplus:          `∔`,
	parser.CMD_nmid:             `∤`,
	parser.CMD_intercal:         `⊺`,
	parser.CMD_veebar:           `⊻`,
	parser.CMD_barwedge:         `⊼`,
	parser.CMD_ltimes:           `⋉`,
	parser.CMD_rtimes:           `⋊`,
	parser.CMD_leftthreetimes:   `⋋`,
	parser.CMD_rightthreetimes:  `⋌`,
	parser.CMD_curlyvee:         `⋎`,
	parser.CMD_curlywedge:       `⋏`,
	parser.CMD_circledcirc:      `⊚`,
	parser.CMD_circledast:       `⊛`,
	parser.CMD_circleddash:      `⊝`,
	parser.CMD_boxplus:          `⊞`,
	parser.CMD_boxminus:         `⊟`,
	parser.CMD_boxtimes:         `⊠`,
	parser.CMD_boxdot:           `⊡`,
}

func GetVanillaString(cmd parser.LatexCmd) string {
	return VanillaToUnicode[cmd]
}
