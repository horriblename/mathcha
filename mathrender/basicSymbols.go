package mathrender

import (
	parser "github.com/horriblename/latex-parser/latex"
)

var VanillaToUnicode = map[parser.LatexCmd]rune{
	// extended symbols by pie framework
	parser.CMD_complement:       '∁',
	parser.CMD_nexists:          '∄',
	parser.CMD_sphericalangle:   '∢',
	parser.CMD_iint:             '∬',
	parser.CMD_iiint:            '∭',
	parser.CMD_oiint:            '∯',
	parser.CMD_oiiint:           '∰',
	parser.CMD_backsim:          '∽',
	parser.CMD_backsimeq:        '⋍',
	parser.CMD_eqsim:            '≂',
	parser.CMD_ncong:            '≇',
	parser.CMD_approxeq:         '≊',
	parser.CMD_bumpeq:           '≏',
	parser.CMD_Bumpeq:           '≎',
	parser.CMD_doteqdot:         '≑',
	parser.CMD_fallingdotseq:    '≒',
	parser.CMD_risingdotseq:     '≓',
	parser.CMD_eqcirc:           '≖',
	parser.CMD_circeq:           '≗',
	parser.CMD_triangleq:        '≜',
	parser.CMD_leqq:             '≦',
	parser.CMD_geqq:             '≧',
	parser.CMD_lneqq:            '≨',
	parser.CMD_gneqq:            '≩',
	parser.CMD_between:          '≬',
	parser.CMD_nleq:             '≰',
	parser.CMD_ngeq:             '≱',
	parser.CMD_lesssim:          '≲',
	parser.CMD_gtrsim:           '≳',
	parser.CMD_lessgtr:          '≶',
	parser.CMD_gtrless:          '≷',
	parser.CMD_preccurlyeq:      '≼',
	parser.CMD_succcurlyeq:      '≽',
	parser.CMD_precsim:          '≾',
	parser.CMD_succsim:          '≿',
	parser.CMD_nprec:            '⊀',
	parser.CMD_nsucc:            '⊁',
	parser.CMD_subsetneq:        '⊊',
	parser.CMD_supsetneq:        '⊋',
	parser.CMD_vDash:            '⊨',
	parser.CMD_Vdash:            '⊩',
	parser.CMD_Vvdash:           '⊪',
	parser.CMD_VDash:            '⊫',
	parser.CMD_nvdash:           '⊬',
	parser.CMD_nvDash:           '⊭',
	parser.CMD_nVdash:           '⊮',
	parser.CMD_nVDash:           '⊯',
	parser.CMD_vartriangleleft:  '⊲',
	parser.CMD_vartriangleright: '⊳',
	parser.CMD_trianglelefteq:   '⊴',
	parser.CMD_trianglerighteq:  '⊵',
	parser.CMD_multimap:         '⊸',
	parser.CMD_Subset:           '⋐',
	parser.CMD_Supset:           '⋑',
	parser.CMD_Cap:              '⋒',
	parser.CMD_Cup:              '⋓',
	parser.CMD_pitchfork:        '⋔',
	parser.CMD_lessdot:          '⋖',
	parser.CMD_gtrdot:           '⋗',
	parser.CMD_lll:              '⋘',
	parser.CMD_ggg:              '⋙',
	parser.CMD_lesseqgtr:        '⋚',
	parser.CMD_gtreqless:        '⋛',
	parser.CMD_curlyeqprec:      '⋞',
	parser.CMD_curlyeqsucc:      '⋟',
	parser.CMD_nsim:             '≁',
	parser.CMD_lnsim:            '⋦',
	parser.CMD_gnsim:            '⋧',
	parser.CMD_precnsim:         '⋨',
	parser.CMD_succnsim:         '⋩',
	parser.CMD_ntriangleleft:    '⋪',
	parser.CMD_ntriangleright:   '⋫',
	parser.CMD_ntrianglelefteq:  '⋬',
	parser.CMD_ntrianglerighteq: '⋭',
	parser.CMD_blacksquare:      '∎',
	parser.CMD_colon:            '∶',
	parser.CMD_llcorner:         '∟',
	parser.CMD_dotplus:          '∔',
	parser.CMD_nmid:             '∤',
	parser.CMD_intercal:         '⊺',
	parser.CMD_veebar:           '⊻',
	parser.CMD_barwedge:         '⊼',
	parser.CMD_ltimes:           '⋉',
	parser.CMD_rtimes:           '⋊',
	parser.CMD_leftthreetimes:   '⋋',
	parser.CMD_rightthreetimes:  '⋌',
	parser.CMD_curlyvee:         '⋎',
	parser.CMD_curlywedge:       '⋏',
	parser.CMD_circledcirc:      '⊚',
	parser.CMD_circledast:       '⊛',
	parser.CMD_circleddash:      '⊝',
	parser.CMD_boxplus:          '⊞',
	parser.CMD_boxminus:         '⊟',
	parser.CMD_boxtimes:         '⊠',
	parser.CMD_boxdot:           '⊡',
}

func GetVanillaRune(cmd parser.LatexCmd) rune {
	return VanillaToUnicode[cmd]
}
